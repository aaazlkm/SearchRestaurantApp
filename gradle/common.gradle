android {
    compileSdkVersion constant.compileSdkVersion

    defaultConfig {
        minSdkVersion constant.minSdkVersion
        targetSdkVersion constant.targetSdkVersion
        versionCode constant.versionCode
        versionName constant.versionName

        testInstrumentationRunner constant.testInstrumentationRunner

        // hotpepper api keyの設定
        // local.properties に以下の形式で保存されてると想定。
        // hotpepper_api_key = <API_KEY>
        //
        // API KEYをvcに含めたくないのでこの処理をしてるが、本来local.propertiesはsdk locationを記述する場所なので上手い処理ではない。
        // いい方法思いついたら修正する
        def properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        buildConfigField "String", "HOTPEPPER_API_KEY", "\"${properties.getProperty("hotpepper_api_key")}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    viewBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation dependency.test.junit
    androidTestImplementation dependency.test.ext
    androidTestImplementation dependency.test.espresso

    implementation dependency.kotlinx.serialization
    implementation dependency.kotlinx.coroutines

    implementation dependency.androidx.appcompat
    implementation dependency.androidx.core
    implementation dependency.androidx.constraintlayout
    implementation dependency.androidx.startup
    implementation dependency.androidx.lifecycle.viewmodel
    implementation dependency.androidx.lifecycle.runtime

    implementation dependency.material
    implementation dependency.timber

    implementation dependency.dagger.android
    kapt dependency.dagger.compiler

    implementation dependency.retrofit.retrofit
    implementation dependency.retrofit.converter
    implementation dependency.retrofit.logging

    implementation dependency.gson
}